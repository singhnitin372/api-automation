{"name": "To verify verify the record updated for update posts service", "status": "failed", "statusDetails": {"message": "AssertionError: AssertionError(\"assert 'sunt aut fac...reprehenderit' == 'abc'\n    - abc\n    + sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",)\nassert False", "trace": "id = 1\n\n    @allure.title(\"To verify verify the record updated for update posts service\")\n    @pytest.mark.parametrize(\"id\", parametrizeData())\n    def test_put_update_posts_verify_record(id):\n        try:\n            # Calling the update_posts and validating against get_one_posts_service\n            put_response = put_update_post_service.update_new_post(id)\n            log_response_data.from_reponse('update_posts', put_response)\n            put_response_id = put_response.json()['id']\n            get_response = get_one_posts_service.get_post_by_id(id)\n            log_response_data.from_reponse('get_one_posts', get_response)\n            get_title = get_response.json()['title']\n            get_body = get_response.json()['body']\n            d = {'id': put_response_id}\n            data = json.loads(read_json.readfile(\"update_post.json\", d))\n            data_title = data['title']\n            data_body = data['body']\n    \n>           assert get_title == data_title\nE           AssertionError: assert 'sunt aut fac...reprehenderit' == 'abc'\nE             - abc\nE             + sunt aut facere repellat provident occaecati excepturi optio reprehenderit\n\ntest/test_put_update_posts_service.py:65: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nid = 1\n\n    @allure.title(\"To verify verify the record updated for update posts service\")\n    @pytest.mark.parametrize(\"id\", parametrizeData())\n    def test_put_update_posts_verify_record(id):\n        try:\n            # Calling the update_posts and validating against get_one_posts_service\n            put_response = put_update_post_service.update_new_post(id)\n            log_response_data.from_reponse('update_posts', put_response)\n            put_response_id = put_response.json()['id']\n            get_response = get_one_posts_service.get_post_by_id(id)\n            log_response_data.from_reponse('get_one_posts', get_response)\n            get_title = get_response.json()['title']\n            get_body = get_response.json()['body']\n            d = {'id': put_response_id}\n            data = json.loads(read_json.readfile(\"update_post.json\", d))\n            data_title = data['title']\n            data_body = data['body']\n    \n            assert get_title == data_title\n            assert get_body == data_body\n            logger.info('test_put_update_posts_verify_record is Passed')\n        except Exception as e:\n            # In case any exception, marking the test case as Failed\n            logger.error(f'test_put_update_posts_verify_record is Failed')\n            logger.error(f'Error message is: {e}')\n>           assert False, e\nE           AssertionError: AssertionError(\"assert 'sunt aut fac...reprehenderit' == 'abc'\nE               - abc\nE               + sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",)\nE           assert False\n\ntest/test_put_update_posts_service.py:72: AssertionError"}, "steps": [{"name": "Calling UPDATE NEW POST API by id : 1", "status": "passed", "steps": [{"name": "Getting the base url for api", "status": "passed", "start": 1627459756882, "stop": 1627459756882}, {"name": "reading the json from file : 'update_post.json' with dictionary: {'id': 1}", "status": "passed", "parameters": [{"name": "filename", "value": "'update_post.json'"}, {"name": "d", "value": "{'id': 1}"}], "start": 1627459756882, "stop": 1627459756883}, {"name": "Log request Data for service 'update_post'", "status": "passed", "parameters": [{"name": "url", "value": "'https://jsonplaceholder.typicode.com/posts/1'"}, {"name": "header", "value": "{'Content-Type': 'application/json', 'charset': 'UTF-8'}"}, {"name": "service_name", "value": "'update_post'"}], "start": 1627459756883, "stop": 1627459756883}], "parameters": [{"name": "id", "value": "1"}], "start": 1627459756881, "stop": 1627459757480}, {"name": "Log response Data for service 'update_posts'", "status": "passed", "parameters": [{"name": "service_name", "value": "'update_posts'"}, {"name": "response", "value": "<Response [200]>"}], "start": 1627459757480, "stop": 1627459757481}, {"name": "Calling GET POST API by id : 1", "status": "passed", "steps": [{"name": "Getting the base url for api", "status": "passed", "start": 1627459757481, "stop": 1627459757482}, {"name": "Log request Data for service 'get_post_by_id'", "status": "passed", "parameters": [{"name": "url", "value": "'https://jsonplaceholder.typicode.com/posts/1'"}, {"name": "header", "value": "{'Content-Type': 'application/json', 'charset': 'UTF-8'}"}, {"name": "service_name", "value": "'get_post_by_id'"}], "start": 1627459757482, "stop": 1627459757482}], "parameters": [{"name": "id", "value": "1"}], "start": 1627459757481, "stop": 1627459757561}, {"name": "Log response Data for service 'get_one_posts'", "status": "passed", "parameters": [{"name": "service_name", "value": "'get_one_posts'"}, {"name": "response", "value": "<Response [200]>"}], "start": 1627459757562, "stop": 1627459757565}, {"name": "reading the json from file : 'update_post.json' with dictionary: {'id': 1}", "status": "passed", "parameters": [{"name": "filename", "value": "'update_post.json'"}, {"name": "d", "value": "{'id': 1}"}], "start": 1627459757566, "stop": 1627459757568}], "attachments": [{"name": "log", "source": "4fa57db1-69d5-498c-9f63-ba689c00bcd9-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "057780e2-c184-49d0-a8b1-01a3500a4fe0-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "id", "value": "1"}], "start": 1627459756881, "stop": 1627459757574, "uuid": "3db10949-a80c-4fd7-bbcf-cb533a65a1b7", "historyId": "83152177bc662654d0e6f137a5533b42", "testCaseId": "463a6c302e3d5440d99d893f34bd9bdf", "fullName": "test.test_put_update_posts_service#test_put_update_posts_verify_record", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_put_update_posts_service"}, {"name": "host", "value": "LPBR394-NITINSINGH"}, {"name": "thread", "value": "28179-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_put_update_posts_service"}]}